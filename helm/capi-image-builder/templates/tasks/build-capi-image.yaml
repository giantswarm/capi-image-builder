apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ include "name" . }}-build-capi-image
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "labels.common" . | nindent 4 }}
spec:
  description: "Builds a CAPI VM image based on the provided params. The mechanism used to create the image depends on the MAKE_TARGET chosen."
  params:
  - name: KUBERNETES_VERSION
    type: string
    default: "1.24.1"
  - name: BUILDER_IMAGE
    type: string
    # TODO: Replace this with our own modified image
    default: k8s.gcr.io/scl-image-builder/cluster-node-image-builder-amd64:v0.1.12
  - name: ENV_VARS
    type: string
    default: ""
  - name: MAKE_TARGET
    type: string
    default: ""
  - name: PACKER_VARS_FILE
    type: string
    default: "{}"
  workspaces:
  - name: credentials
    mountPath: /config/credentials
    optional: true
  - name: vars
    optional: false
  - name: output
    optional: false
  steps:
    - name: build-vars
      image: quay.io/giantswarm/docker-kubectl:1.24.2
      script: |
        VERSION_PARTS=($(echo $(params.KUBERNETES_VERSION) | tr "." "\n"))
        VERSION_MAJOR=${VERSION_PARTS[0]}
        VERSION_MAJOR=${VERSION_MAJOR#v} # Strip any `v` prefix
        VERSION_MINOR=${VERSION_PARTS[1]}

        echo '{
          "build_timestamp": "gs",
          "kubernetes_deb_version": "$(params.KUBERNETES_VERSION)-00",
          "kubernetes_rpm_version": "$(params.KUBERNETES_VERSION)-0",
          "kubernetes_semver": "v$(params.KUBERNETES_VERSION)",
          "kubernetes_series": "v${VERSION_MAJOR}.${VERSION_MINOR}",
          "output_directory": "$(workspaces.output.path)/cluster-api-v$(params.KUBERNETES_VERSION)"
        }' > default_vars.json
        echo "Default Packer vars:"
        cat default_vars.json

        echo '$(params.PACKER_VARS_FILE)' > override_vars.json
        echo "Override Packer vars:"
        cat override_vars.json

        jq -s '.[0] * .[1]' default_vars.json override_vars.json > $(workspaces.vars.path)/vars.json
        echo "Final Packer vars:"
        cat $(workspaces.vars.path)/vars.json

    - name: build-env-vars
      image: bash:5
      script: |
        echo "$(params.ENV_VARS)" > $(workspaces.vars.path)/env

    - name: build-image
      image: $(params.BUILDER_IMAGE)
      timeout: 4h
      securityContext:
        privileged: true
      env:
      - name: PACKER_VAR_FILES
        value: $(workspaces.vars.path)/vars.json
      - name: PACKER_LOG
        value: "1"
      script: |
        source $(workspaces.vars.path)/env
        make $(params.MAKE_TARGET)
        # If a local file has been created (e.g. for CAPO) we'll also generate a sha256 for it
        if [ -f "cluster-api-v$(params.KUBERNETES_VERSION)" ]; then
          sha256sum cluster-api-v$(params.KUBERNETES_VERSION) > $(workspaces.output.path)/cluster-api-v$(params.KUBERNETES_VERSION).sha256sums
        fi
